plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'org.umc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // default (web, mysql, jpa, devtool, lombok, junit)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // jackson
//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
//    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
//    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // slack webhook
    implementation("com.slack.api:slack-api-client:1.45.3")
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    // rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정부
//def generated = 'src/main/generated'
//
//querydsl {
//    jpa = true
//    querydslSourcesDir = generated
//}
//sourceSets {
//    main.java.srcDir generated
//}
//
//compileQuerydsl{
//    options.annotationProcessorPath = configurations.querydsl
//}
//
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//    querydsl.extendsFrom compileClasspath
//}
clean {
    delete file('src/main/generated')
}

// rest docs
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'

    sources {
        include("**/index.adoc")
    }
    baseDirFollowsSourceDir()
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}") {
        println(file("${asciidoctor.outputDir}")) // 경로 확인
        println(file('static/docs'))
        println(file('src/main/resources/static/docs'))
        into 'src/main/resources/static/docs'
    }
}